# -*- coding: utf-8 -*-
"""README.md

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a91xYKuLEjF_nWyrhiOOXz6Gm3fd3jHU

#  Dynamic Scheduling AI Challenge – Doctor Appointment Optimizer

This project is a submission for the **AI Internship Interview Assessment** by PearlThoughts.  
It simulates an AI-enhanced doctor scheduling system that handles appointment delays, walk-ins, and varying booking channel reliability.

---

##  Key Variables Affecting Schedule Integrity

1. **Appointment Delays**  
   - Some consultations take longer than expected, causing a ripple effect across future appointments.

2. **Walk-Ins & No-Shows**  
   - Unscheduled walk-ins and no-shows lead to gaps or unexpected crowding.

3. **Multi-Channel Booking Variability**  
   - Appointments are booked via IVR (72%), App (18%), WhatsApp (10%) — each with different no-show rates.
   - IVR has the highest no-show risk, while App users are more reliable.

---

##  AI-Enhanced Adjustments for Patient Flow

1. **Predictive Delay Management**  
   - The system uses booking source to simulate risk-based delay prediction.

2. **Smart Rescheduling**  
   - If a delay is predicted, the next patient’s slot is shifted dynamically to prevent waiting congestion.

3. **AI-Powered Patient Communication**  
   - IVR patients are flagged for SMS confirmation, mimicking real-time alerts.

---

##  AI Solution for Multi-Channel Booking Adherence

1. **No-Show Risk Prediction**  
   - The system simulates predicted delays based on channel data — IVR has higher delay outcomes.

2. **Channel-Based Booking Allocation**  
   - More slots should be prioritized for App users due to reliability. IVR users get follow-up confirmations.

3. **Incentivized Confirmation System**  
   - IVR patients receive simulated `[Send SMS Confirmation]` prompts to minimize no-show chances.

---

##  Measuring Success

-  **Reduced Wait Times**  
   Dynamic slot shifting lowers patient overlap and wait times.

-  **No-Show Rate Reduction**  
   Channel-aware scheduling improves appointment accuracy.

-  **Patient Satisfaction**  
   Real-time communication increases transparency and trust.

---

##  How It Works (Code Explanation)

- A class `DoctorSchedule` manages the doctor's schedule.
- Each appointment predicts delay based on booking source.
- If a delay is predicted, the next appointment is automatically shifted.
- Walk-ins are added after the last appointment.
- The final schedule is printed with estimated delays and SMS confirmation messages (if needed).

---

##  Files

- `Doctor_Scheduling_AI.py`: Core Python simulation code
- `README.md`: This explanation + video link

---

##  Explainer Video

 [Click here to watch the video walkthrough](https://youtu.be/0PHSXIB3De4)

---

# Sample Output – Doctor Appointment Schedule

Doctor Dr. Smith (5:00 PM - 8:00 PM)

2025-03-26 17:00:00 - R. Patel (App)

2025-03-26 17:15:00 - A. Kumar (IVR) [Delay: 15 min] [Send SMS Confirmation]

2025-03-26 18:00:00 - [Walk-In] (Walk-In)
"""